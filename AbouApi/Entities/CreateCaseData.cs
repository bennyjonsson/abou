// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using AbouApi.Entities;
//
//    var createCaseData = CreateCaseData.FromJson(jsonString);

namespace AbouApi.Entities
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using AbouApi.Interfaces;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class CitizensData : DataDisableSendNotification
    {
        public CitizensData(IActor actor) : base(actor)
        {
            Comment = "Add Citizen";
        }


        [JsonProperty("OmitSocialSec urityNumberValidation")]
        public bool OmitSocialSecUrityNumberValidation { get; set; }
        [JsonProperty("UpdateExistingCitizen")]
        public bool UpdateExistingCitizen { get; set; }

        [JsonProperty("Citizens")]
        public List<Citizen> Citizens { get; set; }

    }

    public partial class CreateCaseData : IToData
    {
        [JsonProperty("Fields")]
        public List<CreateCaseField> Fields { get; set; }

        [JsonProperty("Citizen")]
        public CitizenBase Citizen { get; set; }

        [JsonProperty("Comment")]
        public string Comment { get; set; }

        [JsonProperty("Actor")]
        public string Actor { get; set; }

        [JsonProperty("UpdateExistingCitizen")]
        public bool UpdateExistingCitizen { get; set; }

        [JsonProperty("OmitSocialSec urityNumberValidation")]
        public bool OmitSocialSecUrityNumberValidation { get; set; }

        [JsonProperty("SentInAs")]
        public string SentInAs { get; set; }

        [JsonProperty("SignatureData")]
        public string SignatureData { get; set; }

        [JsonProperty("SignatureIssuer")]
        public string SignatureIssuer { get; set; }

        [JsonProperty("DisableSendNotification")]
        public string DisableSendNotification { get; set; }

        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, AbouApi.Entities.Converter.Settings);
        }
    }

    public partial class CitizenBase
    {
        [JsonProperty("UserIdentity")]
        public string UserIdentity { get; set; }

        [JsonProperty("FirstName")]
        public string FirstName { get; set; }

        [JsonProperty("LastName")]
        public string LastName { get; set; }

        [JsonProperty("Email")]
        public string Email { get; set; }
    }

    public partial class CreateCaseField
    {
        [JsonProperty("Answer")]
        public string Answer { get; set; }

        [JsonProperty("Arguments")]
        public List<Argument> Arguments { get; set; }
    }

    public partial class Argument
    {
        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("Value")]
        public string Value { get; set; }
    }

   

  

    
}
